// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.943

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Layout(content templ.Component) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>GuPoroca </title><link rel=\"icon\" href=\"/favicon.png\"><!-- Terminal theme --><link href=\"/static/all.css\" rel=\"stylesheet\"><link href=\"/static/colors.css\" rel=\"stylesheet\"><!-- HTMX --><script src=\"https://unpkg.com/htmx.org@1.9.10\"></script></head><body><!-- Navbar --><nav class=\"header\" style=\"max-width: 900px; margin: 0 auto; padding: 0 3rem;\"><div class=\"header__inner\" style=\"display: flex; align-items: center; justify-content: space-between; width: 100%;\"><!-- Left --><div style=\"flex: 1; display: flex; justify-content: flex-start;\"><a href=\"/blog\" class=\"logo\">Home</a></div><!-- Middle (tags) --><div style=\"flex: 1; display: flex; justify-content: center;\"><ul class=\"navigation-menu__inner\" style=\"display: flex; gap: 1rem; list-style: none; margin: 0; padding: 0;\"><li><button hx-get=\"/blog?tag=golang\" hx-target=\"#main-content\" hx-swap=\"innerHTML\" class=\"button link\">#golang</button></li><li><button hx-get=\"/blog?tag=templ\" hx-target=\"#main-content\" hx-swap=\"innerHTML\" class=\"button link\">#templ</button></li><li><button hx-get=\"/blog?tag=qa\" hx-target=\"#main-content\" hx-swap=\"innerHTML\" class=\"button link\">#qa</button></li></ul></div><!-- Right --><div style=\"flex: 1; display: flex; justify-content: flex-end;\"><select id=\"lang-switch\" class=\"px-2 py-1 rounded bg-gray-800 text-white\"><option value=\"en\">English</option> <option value=\"br\">PortuguÃªs</option></select></div></div></nav><!-- Main --><main id=\"main-content\" class=\"content\" style=\"max-width: 900px; margin: 0 auto; padding: 0 3rem;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = content.Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</main><!-- Language Switcher Script --><script>\n\t\t\t(function () {\n\t\t\t  var sel = document.getElementById('lang-switch');\n\n\t\t\t  // Reflect current URL language in the dropdown\n\t\t\t  var m = location.pathname.match(/^\\/(en|br)(?=\\/|$)/);\n\t\t\t  sel.value = m ? m[1] : 'en';\n\n\t\t\t  // On change, swap language prefix but keep the rest of the URL\n\t\t\t  sel.addEventListener('change', function () {\n\t\t\t    var newLang = this.value;\n\n\t\t\t    // Remove current /en or /br prefix if present\n\t\t\t    var path = location.pathname.replace(/^\\/(en|br)(?=\\/|$)/, '');\n\t\t\t    if (path === '' || path === '/') path = '/';\n\n\t\t\t    var newPath = '/' + newLang + (path.startsWith('/') ? '' : '/') + path;\n\n\t\t\t    // Normalize accidental double slashes\n\t\t\t    newPath = newPath.replace(/\\/{2,}/g, '/');\n\n\t\t\t    // Navigate to new URL (preserve query & hash)\n\t\t\t    location.href = newPath + location.search + location.hash;\n\t\t\t  });\n\t\t\t})();\n\t\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
